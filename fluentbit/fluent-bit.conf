[SERVICE]
    Log_Level info
    Parsers_File parsers.conf

# # Testing only
# [INPUT]
#     Name dummy
#     Dummy {"log": "{\"date\": \"2022-04-21T17:53:48.739537\", \"path\": \"/Users/krishan/Projects/nftoftheday/.env/lib/python3.9/site-packages/core/logging.py\", \"function\": \"api\", \"line\": 142, \"message\": \"\", \"level\": \"INFO\", \"logger\": \"api\", \"format\": \"KIBA_API_1\", \"name\": \"notd-api\", \"version\": \"local\", \"environment\": \"dev\", \"requestId\": null, \"apiAction\": \"MESSAGE\", \"apiPath\": \"CMD\", \"apiQuery\": \"a=1&b=2\", \"apiResponse\": \"\", \"apiDuration\": \"\"}"}
#     Tag docker_logs

# Read docker logs files
[INPUT]
    Name tail
    Path /var/lib/docker/containers/*/*.log
    Parser docker_log_parser
    Tag docker_logs

# Extract log fields (docker wraps logs in {"log": "<msg>", ...})
[FILTER]
    Name parser
    Match docker_logs
    Parser kiba_log_parser
    Key_Name log
    Preserve_Key Off
    Reserve_Data On

# Remove time field from docker
[FILTER]
    Name record_modifier
    Match docker_logs
    Remove_key time

# anything with filter: KIBA_ gets its tag changed to docker_logs_kiba
# NOTE(krishan711): this isnt used for anything yet but could be in the future
[FILTER]
    Name rewrite_tag
    Match docker_logs
    Rule $format ^(KIBA_[A-Z0-9_]+)$ "docker_logs_kiba" false
    Emitter_Name re_emitted

# # Testing only
# [OUTPUT]
#     Name es
#     Match *
#     Host elasticsearch

# Send to opensearch instance on AWS
[OUTPUT]
    Name opensearch
    Match *
    Host vpc-kiba-rkk4bu4zsta75p5tl4ucwpgbje.eu-west-1.es.amazonaws.com
    Port 443
    tls On
    Logstash_Format On
